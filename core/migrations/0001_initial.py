# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2021-07-23 07:26
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('coupon', '0004_auto_20180905_1258'),
    ]

    operations = [
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=150, null=True)),
                ('icon', models.ImageField(upload_to=b'images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'payment_not_done', b'PAYMENT NOT DONE'), (b'payment_done', b'PAYMENT DONE'), (b'order_placed', b'ORDER PLACED'), (b'pending_customer_approval', b'PAINDING CUSTOMER APPROVAL'), (b'customer_approval_done', b'CUSTOMER_APPROVAL_DONE'), (b'in_process', b'IN PROCESS'), (b'dispatched', b'Dispatched'), (b'canceled', b'Canceled'), (b'delivered', b'DELIVERED')], default=b'payment_not_done', max_length=50)),
                ('payment_type', models.CharField(choices=[(b'online_payu', b'ONLINE PAYUMONEY'), (b'on_cash', b'ON CASH')], default=b'on_cash', max_length=150)),
                ('plant_details', jsonfield.fields.JSONField()),
                ('amount', models.PositiveIntegerField(default=0)),
                ('coupon_discount', models.PositiveIntegerField(default=0)),
                ('placed_on', models.DateTimeField(default=datetime.datetime.now)),
                ('shipping_name', models.CharField(max_length=150, null=True)),
                ('shipping_phone', models.CharField(max_length=150, null=True)),
                ('shipping_email', models.CharField(blank=True, max_length=150, null=True)),
                ('shipping_address1', models.CharField(max_length=150, null=True)),
                ('shipping_address2', models.CharField(max_length=150, null=True)),
                ('shipping_city', models.CharField(max_length=150, null=True)),
                ('shipping_pincode', models.CharField(max_length=150, null=True)),
                ('shipping_state', models.CharField(max_length=150, null=True)),
                ('is_gift', models.BooleanField(default=False)),
                ('gift_text', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('delivery_date', models.DateField(default=datetime.datetime(2021, 7, 23, 7, 26, 33, 13056))),
                ('delivery_time', models.CharField(choices=[(b'10am_12pm', b'10:00 am - 12:00 pm'), (b'12pm_02pm', b'12:00 pm - 02:00 pm'), (b'02pm_04pm', b'02:00 pm - 04:00 pm'), (b'04pm_06pm', b'04:00 pm - 06:00 pm')], default=b'10am_12pm', max_length=150)),
                ('shipping_latitude', models.FloatField(default=0.0)),
                ('shipping_longitude', models.FloatField(default=0.0)),
                ('delivery_charge', models.PositiveIntegerField(default=0)),
                ('coupon', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coupon.Coupon')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Booking',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
            },
        ),
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=150, null=True)),
                ('slug', models.SlugField(blank=True, default=None, max_length=200, null=True, unique=True)),
                ('banner_text', models.TextField(default=None, max_length=500, null=True)),
                ('feature_text', models.TextField(default=None, max_length=500, null=True)),
                ('thumbnail', models.ImageField(default=b'images/product-image.jpg', upload_to=b'images/')),
                ('description', models.TextField(default=None, max_length=1000, null=True)),
                ('synonyms', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('title_tag', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_description', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('meta_keyword', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('long_contents', models.TextField(blank=True, default=None, max_length=25000, null=True)),
                ('video_url', models.URLField(default=None, max_length=500, null=True)),
                ('category_type', models.CharField(choices=[(b'Plants', b'Plants'), (b'Accessories', b'Accessories'), (b'Gifting', b'Gifting')], default=b'Plants', max_length=50)),
                ('custom_header_meta', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('custom_script_seo', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('benefits', models.ManyToManyField(to='core.Benefit')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryPagePromotionalBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_image', models.ImageField(upload_to=b'images/')),
                ('banner_title', models.CharField(max_length=350, null=True)),
                ('link', models.CharField(max_length=350, null=True)),
            ],
            options={
                'verbose_name': 'Category page promotional banner',
                'verbose_name_plural': 'Category page promotional banner',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='CorporateGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, null=True)),
                ('image', models.ImageField(upload_to=b'images/')),
            ],
            options={
                'verbose_name': 'Corporate Gift',
                'verbose_name_plural': 'Corporate Gift',
            },
        ),
        migrations.CreateModel(
            name='DeliveryBoyOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_boy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Booking')),
            ],
            options={
                'verbose_name': 'Delivery Boy Order',
                'verbose_name_plural': 'Delivery Boy Order',
            },
        ),
        migrations.CreateModel(
            name='DeliveryChargeConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_amount', models.PositiveIntegerField(verbose_name=b'Maximum amount for delivery charge')),
                ('delivery_charge', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Config Delivery Charge',
                'verbose_name_plural': 'Config Delivery Charge',
            },
        ),
        migrations.CreateModel(
            name='DiwaliGifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('keyword', models.CharField(blank=True, default=None, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Diwali Gifts Page',
                'verbose_name_plural': 'Diwali Gifts Page',
            },
        ),
        migrations.CreateModel(
            name='GiftingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True, default=None, max_length=200, null=True, unique=True)),
                ('description', models.TextField(default=None, max_length=1000, null=True)),
                ('thumbnail', models.ImageField(default=b'images/product-image.jpg', upload_to=b'images/')),
                ('gifting_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.GiftingCategory')),
            ],
            options={
                'verbose_name': 'GiftingCategory',
                'verbose_name_plural': 'GiftingCategories',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=b'images/')),
                ('title', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('alt', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Maintenance Level',
                'verbose_name_plural': 'Maintenance Level',
            },
        ),
        migrations.CreateModel(
            name='OfferSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(upload_to=b'images/')),
                ('title', models.CharField(max_length=350, null=True)),
                ('link', models.CharField(max_length=350, null=True)),
                ('link_text', models.CharField(max_length=350, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
            ],
            options={
                'verbose_name': 'Offer Slider',
                'verbose_name_plural': 'Offer Slider',
            },
        ),
        migrations.CreateModel(
            name='OnlineNersery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=250, null=True)),
                ('banner_image', models.ImageField(upload_to=b'images/')),
                ('meta_title', models.CharField(max_length=250, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=500, null=True)),
                ('long_content', models.TextField(blank=True, max_length=25000, null=True)),
                ('categories', models.ManyToManyField(to='core.Category', verbose_name=b'Select Category')),
            ],
            options={
                'verbose_name': 'Online Nursery',
                'verbose_name_plural': 'Online Nursery',
            },
        ),
        migrations.CreateModel(
            name='OnlineNerseryCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
                ('online_nersery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.OnlineNersery')),
            ],
            options={
                'verbose_name': 'Online Nursery Category',
                'verbose_name_plural': 'Online Category',
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[(b'payment_not_done', b'PAYMENT NOT DONE'), (b'payment_done', b'PAYMENT DONE'), (b'order_placed', b'ORDER PLACED'), (b'pending_customer_approval', b'PAINDING CUSTOMER APPROVAL'), (b'customer_approval_done', b'CUSTOMER_APPROVAL_DONE'), (b'in_process', b'IN PROCESS'), (b'dispatched', b'Dispatched'), (b'canceled', b'Canceled'), (b'delivered', b'DELIVERED')], default=b'in_process', max_length=50)),
                ('vendor_ids', models.CharField(blank=True, default=b'', max_length=500, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Booking')),
            ],
            options={
                'verbose_name': 'Order Detail',
                'verbose_name_plural': 'Order Details',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(default=b'', max_length=25)),
                ('status', models.CharField(choices=[(b'not_initiated', b'NOT_INITIATED'), (b'success', b'SUCCESS'), (b'failure', b'FAILURE'), (b'cancelled', b'CANCELLED')], default=b'not_initiated', max_length=50)),
                ('payee_name', models.CharField(max_length=150, null=True)),
                ('payee_mobile', models.CharField(blank=True, max_length=150, null=True)),
                ('payee_email', models.CharField(max_length=150)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('returned_details', jsonfield.fields.JSONField(default={})),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Booking')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlantQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=350, null=True)),
                ('answer', models.TextField(max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Plant Question Answer',
                'verbose_name_plural': 'Plant Question Answer',
            },
        ),
        migrations.CreateModel(
            name='Plants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=150, null=True)),
                ('product_type', models.CharField(choices=[(b'Plants', b'Plants'), (b'Seeds', b'Seeds'), (b'Pots', b'Pots'), (b'Tools', b'Tools'), (b'Fertilizers', b'Fertilizers'), (b'Soil', b'Soil'), (b'Combos', b'Combos'), (b'Organic Compose', b'Organic Compose'), (b'Organic Compose', b'Organic Compose'), (b'GiftingCategory', b'GiftingCategory')], default=b'Plants', max_length=50)),
                ('actual_price', models.PositiveIntegerField(default=0)),
                ('price_before_sale', models.PositiveIntegerField(blank=True, null=True)),
                ('selling_price', models.PositiveIntegerField(default=0)),
                ('nutritional_value', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('about', models.TextField(default=None, max_length=2500, null=True)),
                ('how_to_grow_soil_need', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('how_to_grow_fertilizer_type', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('how_to_grow_process', models.TextField(blank=True, default=None, max_length=5000, null=True)),
                ('how_to_grow_growth_pattern', models.CharField(choices=[(b'Slow', b'Slow'), (b'Moderate', b'Moderate'), (b'Fast', b'Fast')], default=b'Slow', max_length=50)),
                ('how_to_grow_pruning', models.CharField(choices=[(b'Every Month', b'Every Month'), (b'1-2 Month', b'1-2 Month'), (b'2-3 Month', b'2-3 Month'), (b'3-4 Month', b'3-4 Month'), (b'4-5 Month', b'4-5 Month'), (b'5-6 Month', b'5-6 Month'), (b'6-7 Month', b'6-7 Month'), (b'7-8 Month', b'7-8 Month'), (b'8-9 Month', b'8-9 Month'), (b'9-10 Month', b'9-10 Month')], default=b'Every Month', max_length=50)),
                ('how_to_grow_re_potting', models.CharField(choices=[(b'Every 3-4 Month', b'Every 3-4 Month'), (b'Every 5-6 Month', b'Every 5-6 Month'), (b'Every 6-7 Month', b'Every 6-7 Month'), (b'Every 7-8 Month', b'Every 7-8 Month'), (b'Every 8-9 Month', b'Every 8-9 Month'), (b'Every 9-10 Month', b'Every 9-10 Month'), (b'Every 10-11 Month', b'Every 10-11 Month'), (b'Every 11-12 Month', b'Every 11-12 Month'), (b'Every 12-13 Month', b'Every 12-13 Month'), (b'Every 13-14 Month', b'Every 13-14 Month'), (b'Every 14-15 Month', b'Every 14-15 Month'), (b'Every 15-16 Month', b'Every 15-16 Month'), (b'Every 16-17 Month', b'Every 16-17 Month'), (b'Every 17-18 Month', b'Every 17-18 Month')], default=b'Every 3-4 Month', max_length=50)),
                ('maintenance_tip_do', models.TextField(blank=True, default=None, max_length=5000, null=True)),
                ('maintenance_tip_dont', models.TextField(blank=True, default=None, max_length=5000, null=True)),
                ('benefits', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('placement', models.CharField(choices=[(b'Outdoor-Sunny', b'Outdoor-Sunny'), (b'Outdoor-Shades', b'Outdoor-Shades'), (b'Indoor', b'Indoor'), (b'Outdoor-Sunny or Indoor', b'Outdoor-Sunny or Indoor'), (b'Outdoor-Shades or Indoor', b'Outdoor-Shades or Indoor'), (b'Anywhere', b'Anywhere')], default=b'Anywhere', max_length=50)),
                ('toxicity', models.CharField(blank=True, choices=[(b'YES', b'YES'), (b'NO', b'NO')], default=b'NO', max_length=100, null=True)),
                ('min_height', models.PositiveIntegerField(default=0)),
                ('max_height', models.PositiveIntegerField(default=0)),
                ('water_frequency_summer', models.CharField(choices=[(b'Alternate Day', b'Alternate Day'), (b'Daily', b'Daily'), (b'Twice Week', b'Twice Week'), (b'Weekly', b'Weekly'), (b'Monthly', b'Monthly')], default=b'Daily', max_length=150)),
                ('water_frequency_winter', models.CharField(choices=[(b'Alternate Day', b'Alternate Day'), (b'Daily', b'Daily'), (b'Twice Week', b'Twice Week'), (b'Weekly', b'Weekly'), (b'Monthly', b'Monthly')], default=b'Daily', max_length=150)),
                ('fertilizer_frequency_summer', models.CharField(choices=[(b'Every Month', b'Every Month'), (b'1-2 Month', b'1-2 Month'), (b'2-3 Month', b'2-3 Month'), (b'3-4 Month', b'3-4 Month'), (b'4-5 Month', b'4-5 Month'), (b'5-6 Month', b'5-6 Month'), (b'6-7 Month', b'6-7 Month'), (b'7-8 Month', b'7-8 Month'), (b'8-9 Month', b'8-9 Month'), (b'9-10 Month', b'9-10 Month'), (b'No', b'No')], default=b'No', max_length=150)),
                ('fertilizer_frequency_winter', models.CharField(choices=[(b'Every Month', b'Every Month'), (b'1-2 Month', b'1-2 Month'), (b'2-3 Month', b'2-3 Month'), (b'3-4 Month', b'3-4 Month'), (b'4-5 Month', b'4-5 Month'), (b'5-6 Month', b'5-6 Month'), (b'6-7 Month', b'6-7 Month'), (b'7-8 Month', b'7-8 Month'), (b'8-9 Month', b'8-9 Month'), (b'9-10 Month', b'9-10 Month'), (b'No', b'No')], default=b'No', max_length=150)),
                ('family_name', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('synonyms', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('fragrance', models.CharField(choices=[(b'Strong', b'Strong'), (b'Low', b'Low'), (b'Medium', b'Medium'), (b'None', b'None')], default=b'None', max_length=50)),
                ('plant_type', models.CharField(choices=[(b'Fruit', b'Fruit'), (b'Vegetable', b'Vegetable'), (b'None', b'None')], default=b'None', max_length=50)),
                ('flower', models.BooleanField(default=False)),
                ('flower_color', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('oxygen_sunlight', models.BooleanField(default=False)),
                ('oxygen_night', models.BooleanField(default=False)),
                ('stock', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('width', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name=b'Width/Length')),
                ('height', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('diameter', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('shipping_info', models.TextField(blank=True, default=None, max_length=4000, null=True)),
                ('title_tag', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_description', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('meta_keyword', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('product_sku', models.CharField(default=None, max_length=150, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, default=None, max_length=200, null=True, unique=True)),
                ('custom_header_meta', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('custom_script_seo', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('category', models.ManyToManyField(to='core.Category')),
                ('giftcategory', models.ForeignKey(default=b'', on_delete=django.db.models.deletion.CASCADE, to='core.GiftingCategory')),
                ('maintenance_level', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.MaintenanceLevel')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'Plant',
                'verbose_name_plural': 'Plants',
            },
        ),
        migrations.CreateModel(
            name='PlantStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(default=1)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Plants')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Price Category',
                'verbose_name_plural': 'Price Categories',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(default=None, max_length=500, null=True)),
                ('rating', models.PositiveIntegerField(choices=[(1, b'1'), (2, b'2'), (3, b'3'), (4, b'4'), (5, b'5')], default=5)),
                ('status', models.CharField(choices=[(b'pending', b'Pending'), (b'approved', b'Approved')], default=b'pending', max_length=50, null=True)),
                ('plant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Plants')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Review',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Season',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(upload_to=b'images/')),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('text', models.TextField(max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userType', models.CharField(choices=[(b'vendor', b'Vendor'), (b'delivery_boy', b'Delivery Boy'), (b'customer', b'Customer')], default=b'customer', max_length=50)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('name', models.CharField(blank=True, default=b'', max_length=200, null=True)),
                ('address_line1', models.CharField(blank=True, default=b'', max_length=250, null=True)),
                ('address_line2', models.CharField(blank=True, default=b'', max_length=250, null=True)),
                ('state', models.CharField(blank=True, default=b'', max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=b'', max_length=100, null=True)),
                ('nearest_landmark', models.CharField(blank=True, default=b'', max_length=250, null=True)),
                ('pincode', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('forgot_code', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='plants',
            name='price_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PriceCategory'),
        ),
        migrations.AddField(
            model_name='plants',
            name='season',
            field=models.ManyToManyField(blank=True, default=None, to='core.Season'),
        ),
        migrations.AddField(
            model_name='plants',
            name='tags',
            field=models.ManyToManyField(to='core.Tags'),
        ),
        migrations.AddField(
            model_name='plantquestionanswer',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Plants'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Plants'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='vendor',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='onlinenerserycategory',
            name='plants',
            field=models.ManyToManyField(to='core.Plants', verbose_name=b'Select Plants'),
        ),
        migrations.AddField(
            model_name='diwaligifts',
            name='plants',
            field=models.ManyToManyField(to='core.Plants', verbose_name=b'Select Plants'),
        ),
        migrations.AddField(
            model_name='cities',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.State'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Carts'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Plants'),
        ),
    ]
